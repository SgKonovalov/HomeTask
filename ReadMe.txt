Добрый день!
Описание выполненного задания в части построения по классам и интерфейсам
(итого 2 интерфейса и 6 классов + «Main» + «TestClasses»).

! Подробное описание интерфейсов и классов в комментариях программы !

В рамках задания, необходимо сделать модуль, который будет заниматься фильтрацией,
согласно правилам (которых может быть много и они могут быть сложными и/или постоянно меняться).

Для выполнения задания, я воспользовался созданием «служб и поставщиков»,
чтобы под каждый запрос можно было создавать свой класс и индивидуально его описать,
не усложняя код. Таким образом, решена проблема дальнейшей работы с программой и расширением
её функциональности.

Для определения «службы», создан интерфейс «Filter»,
который предоставляет абстрактное представление выполнения запроса, а именно,
у запроса есть имя и сам функционал.

Для определения «поставщика», создан интерфейс «FilterProvider», который и используется в модуле «HomeTask».

Для каждого запроса создаётся свой класс, реализующий интерфейс «службы» («Filter»).
Так, в рамках задания, необходимо создать 3 запроса:
1. Вылет до текущего момента времени – имя функции «DepBefTheCurMom»;
2. Сегменты с датой прилёта раньше даты вылета – имя функции «DerDateEarArrDate»;
3. Вылет до текущего момента времени – имя функции «MoreThenTwH».
Для каждого запроса создаётся свой класс, реализующий интерфейс «поставщика» («FilterProvider»).
Классы включаются в модуль ч/з интерфейс «FilterProvider».

Таким образом, для создания нового запроса, нужно создать 2 класса:
1. Класс «служба» с реализацией самого запроса;
2. Класс «поставщик», позволяющий работать с функцией службы.

Для реализации запросов, в методе «main» достаточно вызвать статический метод «getFiltered()»,
и в параметры ему передать имя нужной функции.